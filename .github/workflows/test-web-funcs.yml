# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: "Unit Test: web-based functions"

on:
  push:
    branches:
    - master
    - premerge
  pull_request:
    branches:
    - master
    - premerge
  schedule:
  # Web crawlers might be outdated because of website updating, so run periodically to follow the changes
  - cron: '9 9 * * 3,6,0'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-web-crawlers:

    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    env:
      PYTHONIOENCODING: "utf-8"
      PYTEST_ADDOPTS: "-rA --color=yes --tb=long --showlocals"

    steps:
    - uses: actions/checkout@v2
    - name: Setup Python 3.8
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-python3.8-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Test proxyfree.py
      run: |
        poetry run pytest tests/test_proxyfree.py
    - name: Test web crawlers
      run: |
        poetry run pytest tests/test_crawlers.py
    - name: Upload log as artifact
      uses: actions/upload-artifact@v1
      if: ${{ always() }}
      with:
        name: JavSP-web-funcs.log
        path: JavSP.log
