################################
# 推测番号前忽略文件名中的特定字符串（忽略大小写，以英文分号;分隔）
# 大多数情况软件能够自动识别番号，只有当文件名中特定的部分导致番号识别错误时才需要更新此设置
id_sanitizer:
  # 要忽略的正则表达式（如果你不熟悉正则表达式，请不要修改此配置，否则可能严重影响番号识别效果）
  ignore_regexes:
    - 144P
    - 240P
    - 360P
    - 480P
    - 720P
    - 1080P
    - 2K
    - 4K
    - '\w+2048\.com'
    - 'Carib(beancom)?'
    - '[^a-z\d](f?hd|lt)[^a-z\d]'

################################
scanner:
  # 整理哪个文件夹下的影片？（此项留空时将在运行时询问）
  input_directory: null
  # 哪些后缀的文件应当视为影片？
  filename_extensions: [.3gp, .avi, .f4v, .flv, .iso, .m2ts, .m4v, .mkv, .mov, .mp4, .mpeg, .rm, .rmvb, .ts, .vob, .webm, .wmv, .strm, .mpg]
  # 扫描影片文件时忽略指定的文件夹（以.开头的文件夹不需要设置也会被忽略）
  ignore_folder: ['#recycle/', '#整理完成/', '#不要扫描/']
  # 匹配番号时忽略小于指定大小的文件（以MiB为单位，0表示禁用此功能）
  # 格式要求：https://docs.pydantic.dev/2.0/usage/types/bytesize/
  minimum_size: 232MiB
  # 整理时是否移动文件: true-移动所有文件到新文件夹; false-数据保存到同级文件夹，不移动文件
  move_files: true

################################
network:
  # 设置代理服务器地址，支持 http, socks5/socks5h 代理，比如'http://127.0.0.1:1080'
  # null表示禁用代理
  proxy_server: null
  # 各个站点的免代理地址。地址失效时软件会自动尝试获取新地址，你也可以手动设置
  proxy_free:
    avsox: 'https://avsox.click/'
    javbus: 'https://www.seedmm.help/'
    javdb: 'https://javdb368.com/'
    javlib: 'https://www.y78k.com/'
  # 网络问题导致抓取数据失败时的重试次数，通常3次就差不多了
  retry: 3
  # https://en.wikipedia.org/wiki/ISO_8601#Durations
  timeout: PT10S

################################
# 要使用的爬虫列表（汇总数据时从前到后进行）
# airav avsox avwiki fanza fc2 fc2fan javbus javdb javlib javmenu jav321 mgstage prestige
crawler_select:
  normal: [airav, avsox, javbus, javdb, javlib, jav321, mgstage, prestige]
  fc2: [fc2, avsox, javdb, javmenu, fc2ppvdb]
  # 番号中只包含数字
  num_id: [fanza]
  getchu: [dl_getchu]
  gyutto: [gyutto]

################################
crawler:
  # 爬虫至少要获取到哪些字段才可以视为抓取成功？
  required_keys: [cover, title]
  # 努力爬取更准确更丰富的信息（会略微增加部分站点的爬取耗时）
  hardworking: true
  # 使用网页番号作为最终番号（启用时会对番号大小写等进行更正）
  respect_site_avid: true
  # fc2fan已关站。如果你有镜像，请设置本地镜像文件夹的路径，此文件夹内要有类似'FC2-12345.html'的网页文件
  fc2fan_local_path: null
  # 标题处理：删除尾部可能存在的女优名
  title_remove_actor: true
  # 标题处理：优先使用中文标题（如果能获取到的话）
  title_chinese_first: true
  # 刮削一部电影后的等待时间（设置为0禁用此功能）
  # https://en.wikipedia.org/wiki/ISO_8601#Durations
  sleep_after_scraping: PT1S
  # 是否使用javdb的封面（fallback/yes/no, 默认fallback: 如果能从别的站点获得封面则不用javdb的以避免水印）
  use_javdb_cover: fallback
  # 是否统一女优艺名。启用时会尝试将女优的多个艺名统一成一个
  unify_actress_name: true

################################
# 配置整理时的命名规则
# path_pattern, nfo_title_pattern和name_pattern中可以使用变量来引用影片的数据，支持的变量列表见下面的地址:
# https://github.com/Yuukiy/JavSP/wiki/NamingRule-%7C-%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99
summarizer:
  # 整理后的影片和封面等文件的保存位置
  output_root: '#整理完成'
  # 存放影片、封面等文件的文件夹路径
  # 如果你使用Jellyfin等媒体管理工具，可以将规则改为 {censor}/{actress}/{num}
  path_pattern: '{actress}/[{num}] {title}'
  # 影片、封面、nfo信息文件等的文件名将基于下面的规则来创建
  name_pattern: '{num}'
# 允许的最长文件路径（路径过长时将据此自动截短标题）
  max_path_length: 250
  # 是否以字节数来计算文件路径长度
  path_length_by_byte: true
  # 路径中的$actress字段最多包含多少名女优？
  max_actress_count: 10
# nfo文件中的影片标题（即媒体管理工具中显示的标题）
  nfo_title_pattern: '{num} {title}'
  # 依次设置 已知无码/已知有码/不确定 这三种情况下 $censor 对应的文本(可以利用此变量将有码/无码影片整理到不同文件夹)
  censor_texts: ['无码', '有码', '打码情况未知']
  # 下面这些项用来设置对应变量为空时的替代信息
  null_for_title: '#未知标题'
  null_for_actress: '#未知女优'
  null_for_series: '#未知系列'
  null_for_director: '#未知导演'
  null_for_producer: '#未知制作商'
  null_for_publisher: '#未知发行商'

################################
media_sanitizer:
  # 尽可能下载高清封面？（高清封面大小约 8-10 MiB，远大于普通封面，如果你的网络条件不佳，会降低整理速度）
  prefer_big_covers: true
  # 是否下载剧照？
  store_extra_fanarts: false
  # 间隔的两次封面爬取请求之间应该间隔多久
  extra_fanarts_scrap_interval: PT2S
  # 启用图像识别裁剪海报
  use_ai_crop: false
  # 要使用图像识别来裁剪的番号系列需要匹配的正则表达式
  ai_crop_match_regexes:
    - '^\d{6}[-_]\d{3}$'
    - '^ARA'
    - '^SIRO'
    - '^GANA'
    - '^MIUM'
  # 要使用的图像识别引擎，详细配置见文档 https://github.com/Yuukiy/JavSP/wiki/AI-%7C-%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB
  ai_engine: ''
  # 百度人体分析应用的AppID（仅在图像识别引擎为baidu时需要）
  aip_appid: ''
  # 百度人体分析应用的API Key（仅在图像识别引擎为baidu时需要）
  aip_api_key: ''
  # 百度人体分析应用的Secret Key（仅在图像识别引擎为baidu时需要）
  aip_secret_key: ''
  # 在封面图上添加水印（标签），例如“字幕”
  add_label_to_cover: false

################################
# 翻译引擎，可选: google, bing, baidu, claude(haiku), openai （Google可以直接免费使用。留空表示禁用翻译功能）
# 进阶功能的文档 https://github.com/Yuukiy/JavSP/wiki/Translation-%7C-%E7%BF%BB%E8%AF%91
translator:
  engine: ''
  # 是否翻译标题
  translate_title: true
  # 是否翻译剧情简介
  translate_plot: true
  # 百度翻译的APP ID和密钥
  baidu_appid: ''
  baidu_key: ''
  # 微软必应翻译（Azure 认知服务 → 翻译）的密钥
  bing_key: ''
  # Claude的密钥 (使用haiku模型)
  claude_key: ''
  # OpenAI API（默认使用 Groq，可替换成任何兼容 OpenAI 的第三方 API）
  openai_url: 'https://api.groq.com/openai/v1/chat/completions'
  openai_key: ''
  # 要使用的模型（默认使用 Groq 的 llama-3.1-70b-versatile 模型，若使用 OpenAI 官方 API 的话一般模型为 gpt-3.5-turbo）
  openai_model: llama-3.1-70b-versatile

################################
nfo:
  # 是否添加自定义分类(genre)
  add_custom_genres: true
  # 要添加到自定义分类(genre)的字段
  add_custom_genres_fields: ['{genre}', '{censor}']
# 是否添加自定义tag
  add_custom_tags: true
# 要添加到自定义tag的字段
  add_custom_tags_fields: ['{genre}', '{censor}']

################################
other:
  # 是否允许检查更新。如果允许，在有新版本时会显示提示信息和新版功能
  check_update: true
  # 是否允许检查到新版本时自动下载
  auto_update: false
